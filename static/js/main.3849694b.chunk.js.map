{"version":3,"sources":["reducers/initialState.js","actions/quoteActions.js","actions/allActions.js","components/FetchingQuote.js","components/NewQuote.js","components/ShareQuote.js","components/ViewQuote.js","components/RandomQuoteMachine.js","reducers/quoteReducer.js","store/configureStore.js","index.js"],"names":["DEFAULT_QUOTE","DEFAULT_STATE","quote","fetching","requestingQuote","type","receivedQuote","FetchingQuote","react_default","a","createElement","NewQuote","props","fetchQuote","id","className","onClick","ShareQuote","role","aria-pressed","href","concat","text","author","target","rel","ViewQuote","RandomQuoteMachine","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","content","_this$props","components_FetchingQuote","components_ViewQuote","components_NewQuote","components_ShareQuote","Component","connect","state","dispatch","setTimeout","faker","hacker","noun","phrase","quoteReducer","arguments","length","undefined","action","configureStore","createStore","applyMiddleware","thunk","store","render","es","components_RandomQuoteMachine","document","getElementById"],"mappings":"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","file":"static/js/main.3849694b.chunk.js","sourcesContent":["export const DEFAULT_QUOTE = {};\r\nexport const DEFAULT_FETCHING = false;\r\nexport const DEFAULT_STATE = {\r\n\tquote: DEFAULT_QUOTE,\r\n\tfetching: DEFAULT_FETCHING\r\n}","import faker from 'faker';\r\nimport { DEFAULT_QUOTE } from '../reducers/initialState';\r\nimport { REQUESTING_QUOTE, RECEIVED_QUOTE } from './allActions';\r\n\r\nexport const changeQuote = () => {\r\n\treturn function (dispatch) {\r\n\t\tdispatch(requestingQuote());\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst quote = {\r\n\t\t\t\tauthor: faker.hacker.noun(),\r\n\t\t\t\ttext: faker.hacker.phrase()\r\n\t\t\t}\r\n\t\t\tdispatch(receivedQuote(quote))\r\n\t\t}, 500);\r\n\t}\r\n}\r\n\r\nconst requestingQuote = () => {\r\n\treturn {\r\n\t\ttype: REQUESTING_QUOTE,\r\n\t\tquote: DEFAULT_QUOTE\r\n\t}\r\n}\r\n\r\nconst receivedQuote = (quote) => {\r\n\treturn {\r\n\t\ttype: RECEIVED_QUOTE,\r\n\t\tquote\r\n\t}\r\n}","export const REQUESTING_QUOTE = 'REQUESTING_QUOTE';\r\nexport const RECEIVED_QUOTE = 'RECEIVED_QUOTE';","import React from 'react';\r\n\r\nconst FetchingQuote = () => {\r\n\treturn (\r\n\t\t<div>Fetching quote...</div>\r\n\t)\r\n}\r\n\r\nexport default FetchingQuote;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst NewQuote = (props) => {\r\n\tconst { fetchQuote } = props;\r\n\treturn (\r\n\t\t<button id=\"new-quote\"\r\n\t\t\ttype=\"button\"\r\n\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\tonClick={fetchQuote}>\r\n\t\t\tNew quote\r\n\t  \t</button>\r\n\t);\r\n};\r\n\r\nNewQuote.propTypes = {\r\n\tfetchQuote: PropTypes.func\r\n}\r\n\r\nexport default NewQuote;","import { PropTypes } from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst ShareQuote = (props) => {\r\n\tconst { quote } = props;\r\n\treturn (\r\n\t\t<div className=\"pt-2\">\r\n\t\t\t<a className=\"btn btn-secondary twitter-share-button\"\r\n\t\t\t\trole=\"button\"\r\n\t\t\t\taria-pressed=\"true\"\r\n\t\t\t\tid=\"tweet-quote\"\r\n\t\t\t\thref={`https://twitter.com/intent/tweet?text=${quote.text}-${quote.author}`}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\">\r\n\t\t\t\tShare quote\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nShareQuote.propTypes = {\r\n\tquote: PropTypes.object\r\n}\r\n\r\nexport default ShareQuote;","import { PropTypes } from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst ViewQuote = (props) => {\r\n\tconst { quote } = props;\r\n\treturn (\r\n\t\t<blockquote className=\"blockquote text-right\">\r\n\t\t\t<p id=\"text\"\r\n\t\t\t\tclassName=\"mb-0\">\r\n\t\t\t\t{quote.text}\r\n\t\t\t</p>\r\n\t\t\t<footer id=\"author\"\r\n\t\t\t\tclassName=\"blockquote-footer\">\r\n\t\t\t\t{quote.author}\r\n\t\t\t</footer>\r\n\t\t</blockquote>\r\n\t)\r\n}\r\n\r\nViewQuote.propTypes = {\r\n\tquote: PropTypes.object\r\n}\r\n\r\nexport default ViewQuote;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeQuote } from '../actions/quoteActions';\r\nimport FetchingQuote from './FetchingQuote';\r\nimport NewQuote from './NewQuote';\r\nimport ShareQuote from './ShareQuote';\r\nimport ViewQuote from './ViewQuote';\r\n\r\n// react\r\nclass RandomQuoteMachine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.fetchQuote = this.fetchQuote.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchQuote();\r\n\t}\r\n\r\n\tfetchQuote() {\r\n\t\tthis.props.fetchQuote();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { quote, fetchQuote } = this.props;\r\n\t\tlet content;\r\n\t\tif (this.props.fetching) {\r\n\t\t\tcontent = <FetchingQuote />;\r\n\t\t} else {\r\n\t\t\tcontent = <div>\r\n\t\t\t\t<ViewQuote quote={quote} />\r\n\t\t\t\t<NewQuote fetchQuote={fetchQuote} />\r\n\t\t\t\t<ShareQuote quote={quote} />\r\n\t\t\t</div>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div id=\"quote-box\" className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-6 offset-3 jumbotron p-5 mt-5\">\r\n\t\t\t\t\t\t{content}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nRandomQuoteMachine.propTypes = {\r\n\tquote: PropTypes.object,\r\n\tfetchQuote: PropTypes.func\r\n}\r\n\r\n// react-redux\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tquote: state.quote,\r\n\t\tfetching: state.fetching\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tfetchQuote: () => {\r\n\t\t\tdispatch(changeQuote());\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps)(RandomQuoteMachine);\r\n","import { RECEIVED_QUOTE, REQUESTING_QUOTE } from '../actions/allActions';\r\nimport { DEFAULT_QUOTE, DEFAULT_STATE } from './initialState';\r\n\r\nconst quoteReducer = (state = DEFAULT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUESTING_QUOTE:\r\n\t\t\treturn {\r\n\t\t\t\tquote: DEFAULT_QUOTE,\r\n\t\t\t\tfetching: true\r\n\t\t\t};\r\n\t\tcase RECEIVED_QUOTE:\r\n\t\t\treturn {\r\n\t\t\t\tquote: action.quote,\r\n\t\t\t\tfetching: false\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default quoteReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport quoteReducer from './../reducers/quoteReducer';\r\n\r\nconst configureStore = () => createStore(\r\n\tquoteReducer,\r\n\tapplyMiddleware(thunk)\r\n);\r\n\r\nexport default configureStore;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport RandomQuoteMachine from './components/RandomQuoteMachine';\r\nimport configureStore from './store/configureStore';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t<RandomQuoteMachine />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}