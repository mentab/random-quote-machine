{"version":3,"sources":["RandomQuoteMachine.js","index.js"],"names":["DEFAULT_QUOTE","requestingQuote","type","receivedQuote","quote","store","createStore","state","arguments","length","undefined","action","applyMiddleware","thunk","RandomQuoteMachine","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchQuote","bind","assertThisInitialized","react_default","a","createElement","id","class","RandomQuoteMachine_ViewQuote","RandomQuoteMachine_NewQuote","RandomQuoteMachine_ShareQuote","Component","ShareQuote","role","aria-pressed","href","target","NewQuote","onClick","ViewQuote","content","keys","constructor","RandomQuoteMachine_FetchingQuote","RandomQuoteMachine_ViewQuoteDetail","ViewQuoteDetail","text","author","FetchingQuote","connect","dispatch","setTimeout","faker","hacker","noun","phrase","render","es","src_RandomQuoteMachine","document","getElementById"],"mappings":"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","file":"static/js/main.5c554192.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {createStore, applyMiddleware} from 'redux';\nimport {connect} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport faker from 'faker';\n\n// redux:\nconst REQUESTING_QUOTE = 'REQUESTING_QUOTE';\nconst RECEIVED_QUOTE = 'RECEIVED_QUOTE';\n\nconst DEFAULT_QUOTE = {};\n\nconst changeQuote = () => {\n  return function(dispatch) {\n    dispatch(requestingQuote());\n    setTimeout(() => {\n      const quote = {\n        author: faker.hacker.noun(),\n        text: faker.hacker.phrase()\n      }\n      dispatch(receivedQuote(quote))\n    }, 500);\n  }\n}\n\nconst requestingQuote = () => {\n    return {\n        type: REQUESTING_QUOTE\n    }\n}\n\nconst receivedQuote = (quote) => {\n    return {\n        type: RECEIVED_QUOTE,\n        quote\n    }\n}\n\nconst quoteReducer = (state = DEFAULT_QUOTE, action) => {\n  switch(action.type) {\n    case REQUESTING_QUOTE:\n      return {\n        quote: DEFAULT_QUOTE\n      };\n    case RECEIVED_QUOTE:\n      return {\n        quote: action.quote\n      }\n    default:\n      return state;\n    }\n}\n\nexport const store = createStore(\n  quoteReducer,\n  applyMiddleware(thunk)\n);\n\n// react\nclass RandomQuoteMachine extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchQuote = this.fetchQuote.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchQuote();\n  }\n  fetchQuote() {\n    this.props.fetchQuote();\n  }\n  render() {\n    return (\n      <div id=\"quote-box\" class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-6 offset-3 jumbotron p-5 mt-5\">\n            <ViewQuote quote={this.props.quote} />\n            <NewQuote fetchQuote={this.fetchQuote} />\n            <ShareQuote quote={this.props.quote} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ShareQuote = (props) => {\n  return (\n    <div class=\"pt-2\">\n      <a class=\"btn btn-secondary twitter-share-button\"\n         role=\"button\"\n         aria-pressed=\"true\"\n         id=\"tweet-quote\"\n         href={`https://twitter.com/intent/tweet?text=Text to do`}\n         target=\"_blank\">\n        Share quote\n      </a>\n    </div>\n    );\n};\n\nconst NewQuote = (props) => {\n  return (\n    <button id=\"new-quote\"\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={props.fetchQuote}>\n      New quote\n    </button>\n  );\n};\n\nconst ViewQuote = (props) => {\n  let content;\n  if (props.quote === undefined || (props.quote !== undefined && Object.keys(props.quote).length === 0 && props.quote.constructor === Object)) {\n    content = <FetchingQuote />;\n  } else {\n    content = <ViewQuoteDetail quote={props.quote} />\n  }\n  return (\n    <div>\n      {content}\n    </div>\n  )\n};\n\nconst ViewQuoteDetail = (props) => {\n  return (\n    <blockquote class=\"blockquote text-right\">\n      <p id=\"text\"\n         class=\"mb-0\">\n         {props.quote.text}\n      </p>\n      <footer id=\"author\"\n              class=\"blockquote-footer\">\n        {props.quote.author}\n      </footer>\n    </blockquote>\n  )\n}\n\nconst FetchingQuote = () => {\n  return (\n    <div>Fetching quote...</div>\n  )\n}\n\nViewQuote.propTypes = {\n  quote: PropTypes.object\n}\n\n// react-redux\nconst mapStateToProps = (state) => {\n  return {\n      quote: state.quote\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      fetchQuote: () => {\n          dispatch(changeQuote());\n      }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps)(RandomQuoteMachine);\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport RandomQuoteMachine, {store} from './RandomQuoteMachine';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nrender(\n    <Provider store={store}>\n        <RandomQuoteMachine />\n    </Provider>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}